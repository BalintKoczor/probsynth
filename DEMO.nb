(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     56099,       1240]
NotebookOptionsPosition[     54085,       1196]
NotebookOutlinePosition[     54570,       1214]
CellTagsIndexPosition[     54527,       1211]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"SetDirectory", "[", 
     RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Download", " ", "the", " ", "l1PackV2", " ", "Mathematica", " ", 
     "package"}], " ", "*)"}]}], "Code"], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"ExtractArchive", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ExtractArchive", "[", 
       RowBox[{
        RowBox[{
        "URLDownload", "[", 
         "\"\<https://prod-dcd-datasets-cache-zipfiles.s3.eu-west-1.amazonaws.\
com/sz2z8gw8sz-1.zip\>\"", "]"}], ",", 
        RowBox[{"OverwriteTarget", " ", "->", " ", "True"}]}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<l1packV2\>\"", ",", 
     RowBox[{"OverwriteTarget", " ", "->", " ", "True"}]}], "]"}], ";"}], 
  "Code"], "\n", 
 RowBox[{
  RowBox[{"SetDirectory", "[", "\"\<l1packV2\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"<<", "L1Packv2`"}], "Code"], "\n", 
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]}], "Code",
 CellChangeTimes->{
  3.9392953397919865`*^9, {3.939360688446018*^9, 3.939360714128564*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"99bff3fd-7c49-9f4f-a76b-dabdcf780e4f"],

Cell[CellGroupData[{

Cell["Create a library of gates from Clifford+T sequences", "Title",
 CellChangeTimes->{{3.899965147647793*^9, 3.899965182494637*^9}, 
   3.899965228941467*^9, {3.90532758328258*^9, 3.9053275839507837`*^9}, {
   3.905337602445527*^9, 3.90533760305727*^9}, {3.938845432395651*^9, 
   3.938845433183485*^9}, {3.9392861774847603`*^9, 3.9392862128107243`*^9}, {
   3.9392863579712296`*^9, 
   3.9392863591788464`*^9}},ExpressionUUID->"f97214e3-82b7-1247-bf74-\
45e2e601fb57"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "function", " ", "that", " ", "converts", " ", "a", " ", "Clifford"}], 
    "+", 
    RowBox[{
    "T", " ", "sequence", " ", "into", " ", "a", " ", "unitary", " ", 
     "operator"}]}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{"unitaryFromGateSequence", "[", "sequence_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "Hgate", ",", "Sgate", ",", "Tgate", ",", "Xgate", ",", "Wgate", ",", 
       "chars", ",", "mats", ",", "gate"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Hgate", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           FractionBox["1", 
            SqrtBox["2"]], ",", 
           FractionBox["1", 
            SqrtBox["2"]]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           FractionBox["1", 
            SqrtBox["2"]], ",", 
           RowBox[{"-", 
            FractionBox["1", 
             SqrtBox["2"]]}]}], "}"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Sgate", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "\[ImaginaryI]"}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Tgate", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", 
           SuperscriptBox["\[ExponentialE]", 
            FractionBox[
             RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "4"]]}], "}"}]}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Xgate", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0"}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Wgate", "=", 
       RowBox[{
        RowBox[{"IdentityMatrix", "[", "2", "]"}], "*", 
        RowBox[{"Exp", "[", 
         RowBox[{"\[ImaginaryI]", "*", 
          RowBox[{"\[Pi]", "/", "4"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"chars", "=", 
       RowBox[{"Characters", "[", "sequence", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"mats", "=", 
       RowBox[{"N", "[", 
        RowBox[{
         RowBox[{"chars", "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\"\<X\>\"", "->", "Xgate"}], ",", 
            RowBox[{"\"\<H\>\"", "->", "Hgate"}], ",", " ", 
            RowBox[{"\"\<T\>\"", "->", "Tgate"}], ",", 
            RowBox[{"\"\<S\>\"", "->", "Sgate"}], ",", 
            RowBox[{"\"\<W\>\"", "->", "Wgate"}]}], "}"}]}], ",", "150"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"gate", "=", 
       RowBox[{"mats", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"gate", "=", 
          RowBox[{"gate", ".", 
           RowBox[{"mats", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
        ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "2", ",", 
          RowBox[{"Length", "@", "mats"}]}], "}"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "@", "gate"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Code",
 CellChangeTimes->{{3.93928630894767*^9, 3.939286329884227*^9}, {
  3.9392951781798267`*^9, 3.9392951785863*^9}, {3.939295346710972*^9, 
  3.939295346926428*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"7aded57c-577d-a141-898e-2645a439078d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"open", " ", "library", " ", "of", " ", "Clifford"}], "+", 
    RowBox[{
    "T", " ", "sequences", " ", "that", " ", "were", " ", "generate", " ", 
     "using", " ", "the", " ", "code", " ", "provided", " ", 
     RowBox[{"in", " ", "[", 
      RowBox[{"arXiv", ":", "1403.2975"}], "]"}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"sequences", "=", 
     RowBox[{"Import", "[", "\"\<clifford_T.m\>\"", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Append", " ", "Clifford", " ", "operations", " ", "to", " ", "the", " ", 
     "sequence", " ", "to", " ", "increase", " ", "the", " ", "size", " ", 
     "of", " ", "the", " ", "library"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sequences", "=", 
     RowBox[{"Join", "[", 
      RowBox[{"sequences", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#", "<>", "\"\<H\>\""}], ",", 
            RowBox[{"#", "<>", "\"\<S\>\""}], ",", 
            RowBox[{"#", "<>", "\"\<SH\>\""}], ",", 
            RowBox[{"#", "<>", "\"\<HS\>\""}], "\[IndentingNewLine]", ",", 
            RowBox[{"#", "<>", "\"\<HSS\>\""}], ",", 
            RowBox[{"#", "<>", "\"\<SSH\>\""}], ",", 
            RowBox[{"#", "<>", "\"\<HSH\>\""}], ",", 
            RowBox[{"#", "<>", "\"\<HSSH\>\""}], "\[IndentingNewLine]", ",", 
            RowBox[{"#", "<>", "\"\<SSHSS\>\""}], ",", 
            RowBox[{"#", "<>", "\"\<HSHSH\>\""}], ",", 
            RowBox[{"#", "<>", "\"\<HSSSHS\>\""}]}], "}"}], "&"}], ")"}], "@", 
        RowBox[{"sequences", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"listOfUnitaries", "=", 
     RowBox[{"(", 
      RowBox[{"unitaryFromGateSequence", "/@", "sequences"}], ")"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.939285106553284*^9, 3.939285106783512*^9}, {
   3.939285151095396*^9, 3.9392852076784134`*^9}, {3.939285693156101*^9, 
   3.939285693667335*^9}, {3.9392857993742447`*^9, 3.9392857997335777`*^9}, {
   3.93928583375882*^9, 3.939285859918071*^9}, {3.939285893617201*^9, 
   3.939285926164892*^9}, 3.939285964124861*^9, {3.939286001037998*^9, 
   3.939286017185953*^9}, {3.939286048339533*^9, 3.9392860593823566`*^9}, {
   3.939286219677971*^9, 3.939286221159542*^9}, {3.939286340851364*^9, 
   3.9392864443200703`*^9}, 3.9392867372626705`*^9, {3.939286783776968*^9, 
   3.939286816743738*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"81f5c90b-2c20-814e-896a-6cacd300dcf7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generate the design matrix and the target vector", "Title",
 CellChangeTimes->{{3.899965147647793*^9, 3.899965182494637*^9}, 
   3.899965228941467*^9, {3.90532758328258*^9, 3.9053275839507837`*^9}, {
   3.905337602445527*^9, 3.90533760305727*^9}, {3.938845432395651*^9, 
   3.938845433183485*^9}, {3.9392864565762653`*^9, 3.939286472596266*^9}, {
   3.939291836188017*^9, 
   3.939291837452448*^9}},ExpressionUUID->"cc3c67c0-ffe0-784c-988c-\
3189a9266f2b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"transferMat", "[", "mat_", "]"}], ":=", 
   RowBox[{"Re", "@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Tr", "[", 
        RowBox[{
         RowBox[{"PauliMatrix", "[", "k", "]"}], ".", 
         RowBox[{"ConjugateTranspose", "[", 
          RowBox[{"mat", ".", 
           RowBox[{"PauliMatrix", "[", "l", "]"}], ".", 
           RowBox[{"ConjugateTranspose", "[", "mat", "]"}]}], "]"}]}], "]"}], 
       "/", "2"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "0", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"l", ",", "0", ",", "3"}], "}"}]}], "]"}]}]}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"checkSol", "[", 
    RowBox[{"sol_", ",", "designMatrix_", ",", "Udesired_"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"N", "@", 
      RowBox[{"Log10", "[", 
       RowBox[{
        RowBox[{"Norm", "[", 
         RowBox[{
          RowBox[{"designMatrix", ".", "sol"}], "-", "Udesired"}], "]"}], "/",
         "4"}], "]"}]}], ",", 
     RowBox[{"N", "@", 
      RowBox[{"Log10", "@", 
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"Norm", "[", 
          RowBox[{"sol", ",", "1"}], "]"}], "-", "1"}], "]"}]}]}]}], "}"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.9392864849283524`*^9, 3.939286497031908*^9}, {
  3.939286931708817*^9, 3.939286953871549*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"e7a3c6c8-71f6-7046-a10a-189c353d8cdf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Target", " ", "vector", " ", "as", " ", "the", " ", "vectorised", " ", 
    "process", " ", "matrix", " ", "of", " ", "the", " ", "target", " ", 
    "rotation"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Udesired", "=", 
     RowBox[{"Flatten", "@", 
      RowBox[{"Import", "[", "\"\<target.m\>\"", "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "The", " ", "design", " ", "matrix", " ", "is", " ", "obtained", " ", 
      "as", " ", "a", " ", "list", " ", "of", " ", "vectorised", " ", 
      "process", " ", "matrices", " ", "of", " ", "the", " ", "individual", 
      " ", "Clifford"}], "+", 
     RowBox[{"T", " ", "sequences"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"listOfTransferMats", "=", 
     RowBox[{"transferMat", "/@", "listOfUnitaries"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"designMatrix", "=", 
     RowBox[{"Transpose", "@", 
      RowBox[{"Join", "[", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"listOfTransferMats", "[", 
           RowBox[{"[", "k", "]"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", 
           RowBox[{"Length", "@", "listOfTransferMats"}]}], "}"}]}], "]"}], 
       "\[IndentingNewLine]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Demonstrate", " ", "solution", " ", "using", " ", "a", " ", "least", " ",
      "squares", " ", "fit"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"solvec", "=", 
     RowBox[{"Chop", "[", 
      RowBox[{
       RowBox[{"PseudoInverse", "[", "designMatrix", "]"}], ".", "Udesired"}],
       "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{
    "\"\<Measurement overhead using a least-squares solution:  \>\"", ",", 
     RowBox[{"StringForm", "[", 
      RowBox[{"\"\<1+\!\(\*SuperscriptBox[\(10\), \(``\)]\)\>\"", ",", 
       RowBox[{
        RowBox[{"checkSol", "[", 
         RowBox[{"solvec", ",", "designMatrix", ",", "Udesired"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.9392860828568935`*^9, 3.939286083014536*^9}, {
  3.939286479038157*^9, 3.939286480629106*^9}, {3.9392865188042965`*^9, 
  3.939286520832432*^9}, {3.939286550888223*^9, 3.939286586723808*^9}, {
  3.9392868340501*^9, 3.939286888733219*^9}, {3.939286936870428*^9, 
  3.939286966207237*^9}, {3.939287055325241*^9, 3.939287243967224*^9}, {
  3.9392932309200478`*^9, 3.9392932321105976`*^9}, {3.93929327455546*^9, 
  3.939293287278343*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"44ad50d2-a9a1-504f-aa6c-50b28ea066c2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Measurement overhead using a least-squares solution:  \"\>", 
   "\[InvisibleSpace]", 
   InterpretationBox["\<\"1+\\!\\(\\*SuperscriptBox[\\(10\\), \
\\(\\!\\(\\*RowBox[{\\\"-\\\", \\\"1.2740979560025791`\\\"}]\\)\\)]\\)\"\>",
    StringForm[
    "1+\!\(\*SuperscriptBox[\(10\), \(``\)]\)", -1.2740979560025791`],
    Editable->False]}],
  SequenceForm["Measurement overhead using a least-squares solution:  ", 
   StringForm[
   "1+\!\(\*SuperscriptBox[\(10\), \(``\)]\)", -1.2740979560025791`]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.939286084819675*^9, 3.9392865915284176`*^9, 3.9392867148947334`*^9, 
   3.939286820219309*^9, {3.939286855151249*^9, 3.9392868990035896`*^9}, 
   3.939286966539871*^9, 3.939287058555464*^9, {3.939287128873625*^9, 
   3.9392871457266903`*^9}, 3.939287244841315*^9, 3.9392918396739063`*^9, {
   3.939293232640311*^9, 3.939293287714269*^9}, {3.939293916641605*^9, 
   3.93929394688344*^9}, 3.9392949598875065`*^9, 3.9392949999785156`*^9, {
   3.9392950702304153`*^9, 3.939295097112005*^9}, {3.939295204904764*^9, 
   3.9392952303741283`*^9}, 3.939295311030281*^9, 3.9392953630861034`*^9, 
   3.939360648639895*^9, 3.9393607364121113`*^9},
 CellLabel->
  "During evaluation of \
In[21]:=",ExpressionUUID->"a7f9485a-161d-4c64-a7e0-63ad08ae9571"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["LARS l1 regularised solution", "Title",
 CellChangeTimes->{{3.899965147647793*^9, 3.899965182494637*^9}, 
   3.899965228941467*^9, {3.90532758328258*^9, 3.9053275839507837`*^9}, {
   3.905337602445527*^9, 3.90533760305727*^9}, {3.938845432395651*^9, 
   3.938845433183485*^9}, {3.939287263482033*^9, 
   3.939287272532324*^9}},ExpressionUUID->"05ce3305-2cca-b349-87d2-\
58e57e6961df"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "simple", " ", "linear", " ", "interpolation", " ", "of", " ", "the", " ", 
    "solution", " ", "vector", " ", "entries"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"interpolateVec", "[", 
     RowBox[{"minimizers_", ",", "x_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"vec", ",", "ind", ",", "remainder"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ind", "=", 
        RowBox[{"Floor", "[", "x", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"remainder", "=", 
        RowBox[{"x", "-", "ind"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"vec", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "remainder"}], ")"}], "*", 
          RowBox[{"minimizers", "[", 
           RowBox[{"[", "ind", "]"}], "]"}]}], "+", 
         RowBox[{"remainder", "*", 
          RowBox[{"minimizers", "[", 
           RowBox[{"[", 
            RowBox[{"ind", "+", "1"}], "]"}], "]"}]}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "@", "vec"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}]}]], "Code",
 CellChangeTimes->{{3.9000560571902294`*^9, 3.900056059924039*^9}, {
   3.9053268887655*^9, 3.905326892137385*^9}, {3.9053269369794083`*^9, 
   3.9053269390223665`*^9}, {3.905327264457785*^9, 3.905327267455066*^9}, 
   3.905337831122401*^9, {3.939285765279655*^9, 3.9392857855795918`*^9}, 
   3.9392860804413033`*^9, 3.939286490582124*^9, 3.939286603303463*^9, {
   3.9392866526143684`*^9, 3.939286654797861*^9}, {3.939286929025331*^9, 
   3.939286929468399*^9}, {3.939295158312113*^9, 3.939295172694948*^9}, {
   3.939295317384964*^9, 3.939295317816372*^9}, {3.9392953705228634`*^9, 
   3.939295384858244*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"5a07fbfa-d48d-c143-a78a-afe5a496ae9b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "Run", " ", "the", " ", "LARS", " ", "solver", " ", 
     "\"\<FindMinimizer[...]\>\"", " ", "of", " ", "the", " ", "L1Packv2", 
     " ", "until", " ", "an", " ", "exact", " ", "solution", " ", "is", " ", 
     "found", " ", "using", " ", "the", " ", "option", " ", 
     "MinimumDiscrepancy"}], "->", "0"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"solutionVectors", "=", 
     RowBox[{
      RowBox[{"FindMinimizer", "[", 
       RowBox[{"designMatrix", ",", "Udesired", ",", 
        RowBox[{"Verbose", "->", "0"}], ",", 
        RowBox[{"Exact", "->", "False"}], ",", 
        RowBox[{"MinimumDiscrepancy", "->", "0"}], ",", 
        RowBox[{"ListFunction", ":>", "Minimizer"}]}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "discard", " ", "all", " ", "solutions", " ", "that", " ", "are", " ", 
      "L1", " ", "overregularised"}], ",", " ", 
     RowBox[{"i", ".", "e", "."}], ",", " ", 
     RowBox[{
     "the", " ", "norm", " ", "of", " ", "the", " ", "solution", " ", 
      "vector", " ", "is", " ", "less", " ", "than", " ", "1."}]}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"indexes", "=", 
     RowBox[{"Flatten", "@", 
      RowBox[{"Position", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Norm", "[", 
              RowBox[{"#", ",", "1"}], "]"}], ">=", "1"}], ")"}], "&"}], 
          ")"}], "/@", "solutionVectors"}], ",", "True"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"solutionVectors", "=", 
     RowBox[{"solutionVectors", "[", 
      RowBox[{"[", "indexes", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"find", " ", "solution", " ", "with", " ", "L1", " ", "norm"}], 
      " ", "=", " ", "1"}], ",", " ", 
     RowBox[{"i", ".", "e", "."}], ",", " ", 
     RowBox[{"no", " ", "measurement", " ", "overhead"}], ",", " ", 
     RowBox[{
      RowBox[{"using", " ", "the", " ", "option", " ", "MaximumL1Norm"}], "->",
       "1"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"solL1norm", "=", 
     RowBox[{"FindMinimizer", "[", 
      RowBox[{"designMatrix", ",", "Udesired", ",", 
       RowBox[{"Verbose", "->", "0"}], ",", 
       RowBox[{"Exact", "->", "False"}], ",", 
       RowBox[{"MaximumL1Norm", "->", "1"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"solutionVectors", "=", 
     RowBox[{"Prepend", "[", 
      RowBox[{"solutionVectors", ",", "solL1norm"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Print", "[", 
    RowBox[{"\"\<Exact solution:  \>\"", ",", 
     RowBox[{"MatrixForm", "@", 
      RowBox[{"N", "@", 
       RowBox[{"solutionVectors", "[", 
        RowBox[{"[", 
         RowBox[{"-", "1"}], "]"}], "]"}]}]}], " ", ",", 
     "\"\<       best approximate solution with no measurement overhead:   \>\
\"", ",", 
     RowBox[{"MatrixForm", "@", 
      RowBox[{"N", "@", 
       RowBox[{"solutionVectors", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}]}]}], " ", "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.905327560500599*^9, 3.905327567765818*^9}, {
   3.9053276375012054`*^9, 3.905327637940308*^9}, {3.9053278069032*^9, 
   3.905327808191036*^9}, {3.939286662670761*^9, 3.939286662813406*^9}, 
   3.939287000609579*^9, {3.9392873866235447`*^9, 3.939287392833484*^9}, {
   3.939287428609623*^9, 3.939287610528827*^9}, {3.939287771665518*^9, 
   3.939287778503002*^9}, {3.939287869072666*^9, 3.9392878961702633`*^9}, {
   3.939287959673525*^9, 3.939288054613564*^9}, {3.939288095962473*^9, 
   3.939288124647194*^9}, {3.939288365107679*^9, 3.939288427451648*^9}, {
   3.939291082697838*^9, 3.939291153488167*^9}, {3.939291277576067*^9, 
   3.9392913452894516`*^9}, 3.9392913941470585`*^9, {3.9392932031721497`*^9, 
   3.939293203228674*^9}, {3.939293292243669*^9, 3.939293395652458*^9}, {
   3.939293590612854*^9, 3.939293594751304*^9}, 3.939293762530369*^9, {
   3.939293940286722*^9, 3.939294070591955*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"87269722-91db-134a-8647-44709a48922a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Exact solution:  \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0.`"},
        {"0.28357366357728436`"},
        {"0.06774628161847501`"},
        {"0.`"},
        {"0.`"},
        {"0.`"},
        {"0.`"},
        {"0.`"},
        {"0.`"},
        {"0.28815272818787924`"},
        {"0.11098773996639097`"},
        {"0.`"},
        {"0.`"},
        {"0.`"},
        {"0.`"},
        {"0.24830098414622537`"},
        {"0.`"},
        {"0.`"},
        {"0.`"},
        {"0.0012387044766022633`"},
        {"0.`"},
        {"0.`"},
        {
         RowBox[{"-", "3.344807885090134`*^-8"}]},
        {"0.`"},
        {"0.`"},
        {
         RowBox[{"-", "3.699091007426999`*^-8"}]},
        {"0.`"},
        {"0.`"},
        {
         RowBox[{"-", "2.089928557354426`*^-8"}]},
        {"0.`"},
        {
         RowBox[{"-", "1.0634582739175689`*^-8"}]}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], 
   "\[InvisibleSpace]", "\<\"       best approximate solution with no \
measurement overhead:   \"\>", "\[InvisibleSpace]", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", 
     TagBox[GridBox[{
        {"0.`"},
        {"0.3549111575989626`"},
        {"0.007675783993674175`"},
        {"0.`"},
        {"0.`"},
        {"0.`"},
        {"0.`"},
        {"0.`"},
        {"0.`"},
        {"0.3987721465329451`"},
        {"0.13509841970672462`"},
        {"0.`"},
        {"0.`"},
        {"0.`"},
        {"0.`"},
        {"0.10354249216769351`"},
        {"0.`"},
        {"0.`"},
        {"0.`"},
        {"0.`"},
        {"0.`"},
        {"0.`"},
        {"0.`"},
        {"0.`"},
        {"0.`"},
        {"0.`"},
        {"0.`"},
        {"0.`"},
        {"0.`"},
        {"0.`"},
        {"0.`"}
       },
       GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.5599999999999999]}, 
           Offset[0.27999999999999997`]}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}}],
      Column], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  SequenceForm["Exact solution:  ", 
   MatrixForm[{0., 0.28357366357728436`, 0.06774628161847501, 0., 0., 0., 0., 
    0., 0., 0.28815272818787924`, 0.11098773996639097`, 0., 0., 0., 0., 
    0.24830098414622537`, 0., 0., 0., 0.0012387044766022633`, 0., 
    0., -3.344807885090134*^-8, 0., 0., -3.699091007426999*^-8, 0., 
    0., -2.089928557354426*^-8, 0., -1.0634582739175689`*^-8}], 
   "       best approximate solution with no measurement overhead:   ", 
   MatrixForm[{0., 0.3549111575989626, 0.007675783993674175, 0., 0., 0., 0., 
    0., 0., 0.3987721465329451, 0.13509841970672462`, 0., 0., 0., 0., 
    0.10354249216769351`, 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 
    0., 0.}]],
  Editable->False]], "Print",
 CellChangeTimes->{{3.939293997439085*^9, 3.939294009448805*^9}, {
   3.93929404278026*^9, 3.939294070925114*^9}, 3.939294960002466*^9, 
   3.9392950000559273`*^9, {3.9392950702978306`*^9, 3.9392950971831417`*^9}, 
   3.939295231175247*^9, 3.9392953117937527`*^9, 3.939295363186075*^9, 
   3.939360648708043*^9, 3.939360736501397*^9},
 CellLabel->
  "During evaluation of \
In[27]:=",ExpressionUUID->"24526ce8-96be-4300-8a22-a9354ae657e6"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot tradeoff curve", "Title",
 CellChangeTimes->{{3.899965147647793*^9, 3.899965182494637*^9}, 
   3.899965228941467*^9, {3.90532758328258*^9, 3.9053275839507837`*^9}, {
   3.905337602445527*^9, 3.90533760305727*^9}, {3.938845432395651*^9, 
   3.938845433183485*^9}, {3.939287263482033*^9, 3.939287272532324*^9}, {
   3.939293608681673*^9, 
   3.9392936171502037`*^9}},ExpressionUUID->"756501bf-c5c2-9040-9f75-\
e89ad71e9b65"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"discreteSolutions", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"checkSol", "[", 
        RowBox[{"#", ",", "designMatrix", ",", "Udesired"}], "]"}], ")"}], 
      "&"}], ")"}], "/@", 
    RowBox[{"(", "solutionVectors", ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"interpolatedSolutions", "=", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"checkSol", "[", 
       RowBox[{
        RowBox[{"interpolateVec", "[", 
         RowBox[{"solutionVectors", ",", "k"}], "]"}], ",", "designMatrix", 
        ",", "Udesired"}], "]"}], "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", 
        RowBox[{
         RowBox[{"Length", "@", "solutionVectors"}], "-", "0.1"}], ",", 
        "0.01"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"calculate", " ", "asymptotic", " ", "gridlines"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"errorAtNoOveread", "=", 
   RowBox[{
    RowBox[{"checkSol", "[", 
     RowBox[{
      RowBox[{"solutionVectors", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", "designMatrix", ",", "Udesired"}],
      "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"overheadAtNoError", "=", 
    RowBox[{
     RowBox[{"checkSol", "[", 
      RowBox[{
       RowBox[{"solutionVectors", "[", 
        RowBox[{"[", 
         RowBox[{"-", "1"}], "]"}], "]"}], ",", "designMatrix", ",", 
       "Udesired"}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Show", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"interpolatedSolutions", "\[IndentingNewLine]", ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "10"}], ",", 
           RowBox[{"-", "5"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "10"}], ",", 
           RowBox[{"-", "5"}]}], "}"}]}], "}"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"GridLines", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", "errorAtNoOveread", "}"}], ",", 
         RowBox[{"{", "overheadAtNoError", "}"}]}], "}"}]}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"GridLinesStyle", "\[Rule]", "Black"}], "\[IndentingNewLine]", 
      ",", 
      RowBox[{"PlotStyle", "->", "Red"}], "\[IndentingNewLine]", ",", 
      RowBox[{"AxesLabel", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Log10[approximation error]\>\"", ",", 
         "\"\<Log10[|\[Gamma]\!\(\*SubscriptBox[\(|\), \(1\)]\)-1]\>\""}], 
        "}"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"AxesOrigin", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "10"}], ",", 
         RowBox[{"-", "10"}]}], "}"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"ImageSize", "->", "400"}]}], "\[IndentingNewLine]", "]"}], 
    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
    RowBox[{"ListPlot", "[", 
     RowBox[{"discreteSolutions", ",", 
      RowBox[{"PlotMarkers", "->", 
       RowBox[{"{", 
        RowBox[{"Automatic", ",", " ", "Small"}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "->", "Black"}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.900131767816998*^9, 3.900131822749614*^9}, {
   3.900131863572241*^9, 3.900131878653796*^9}, {3.900131968450982*^9, 
   3.900132080563705*^9}, {3.900132170674006*^9, 3.900132204260856*^9}, {
   3.900133038931564*^9, 3.900133039322683*^9}, {3.905327557901822*^9, 
   3.905327590264859*^9}, {3.905327633189393*^9, 3.9053276334878144`*^9}, {
   3.939286619375969*^9, 3.939286619594291*^9}, {3.9392866686857357`*^9, 
   3.9392866823606625`*^9}, {3.939287004919903*^9, 3.93928701993577*^9}, 
   3.9392874271314335`*^9, 3.939287540513975*^9, {3.9392876567048283`*^9, 
   3.9392876872526608`*^9}, {3.9392877231001987`*^9, 3.939287723161049*^9}, {
   3.9392879038258443`*^9, 3.939287927204056*^9}, {3.9392880666870766`*^9, 
   3.939288077962879*^9}, 3.9392881432952576`*^9, {3.9392884079271526`*^9, 
   3.939288408010845*^9}, {3.9392884453719463`*^9, 3.939288681703972*^9}, 
   3.939291159130199*^9, {3.939291398447403*^9, 3.939291402177334*^9}, {
   3.939293398543415*^9, 3.93929349099509*^9}, {3.9392935373299847`*^9, 
   3.9392935377289867`*^9}, {3.939293627173149*^9, 3.939293661854473*^9}, {
   3.939293712297499*^9, 3.939293878595918*^9}, {3.939293925005497*^9, 
   3.939293926657869*^9}, {3.939294081530432*^9, 3.9392940829782143`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"1582efeb-7438-0641-869a-95a8646f3975"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {RGBColor[1, 0, 0], PointSize[
       NCache[
        Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
      LineBox[CompressedData["
1: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
uodfiaK7T0Q6axZint55rV0uBr8nq/1iG9pt7Y19Wlex/6WYv/Yownyhvshy
TzTmt4rVOouKaYgK3dR0LIqEHtKiLwNt9rynJDgS55GDUPqWElyf1m0yt66Q
MLiEiOpCryxatuBpBJ5f3gfpPqV4PiUKbV+GYz0cLP0gUobnefPr1cOX8b4j
Z7kzG/03uMSbG104f7ZVt5yGhmgFFTqMhFNcJuGf0dz23gc3huL9ybnZ9VwF
DUeObhTac4mEtHsLTxCA+ffZUsXjF0kwnJ9Jf4ZWLjxUfiWEhHOJd+bNK/E8
bv1UnRWM+dJ/eeA4+qLdZ626CyT4rjyx6koVms1WHAwiYXNo9D+F5zTsUJoP
50Ffzk3/U4v+0KhoJ32ehOtZz9nO1ZhHFETTtAMxvxGlxzlr8L702Hiv4zm8
X47VDt9GJxt4+gcF4P7dgcubanFe+lPi6f44jxueW3ShPS4VSlWfxfrV/K7r
9wLvy2rz0QNncL+uaTkvrcO8u8PUlw8tnp19Px99I8O9QeE0CetvGC4zr8d6
DimPMDqF9bmd8WgCXTYzX+rhR4L+N/p4dAMNWUnXrGNPkpDMf3q/UiPOq9+r
Dj7zJSHjroJHC5pHyP19tw/O4xIq260J+3NCdQUH2vGvn9jiZuz3DuNCst6Y
P+yWpWWj+67a1BueICFfTHO/UQsNZ/40jB33wnl8qnHzCPrXqsyAG8dJKNnd
rR/xEvNIWqpfhSfmY9r5nOIrPN+7D74f9CAh6OXh3ia09OKT94XQLzl4Drm9
xryhvLNPzR37xyvZ5UJvsP8TVf4H3HB9OT5P56ArxHcGhx7D55urzJm8xfvv
7/jJvKM4j66zFSbQjvcU6rpd8TxOVZ2PaaVh8/dKHl70yVvSPOvbMH+PD91T
PkJCVyX7URt6cYBc3v7D2M8HukJOvsO8NKXMvHQI//6Ue8jydjyPi4umH7tg
vghPzylBP9xusKbvIN6vT5Zw2nXgvJ62bhJA7/p1IYCjk4bsrt4WdWcS+CNU
VqSjjyWqq7o4YX461/JjRxcNmWrr/sU64vp90hgfQr+y1lWscsB88fCAeEQ3
5rnRrRgdSIgJy3BUek9DVX1CDgOtVJHX9Qb9fc0ibpMD2I/ju8769uB9WkOt
KMAO+9etZ3pSvVgPf9+9yrElgccrWasc7S/mr99ng/1UNNHOsY+GkiUtbBH0
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
nY6NNKTOb/yoiP4f6swfHw==
       "]]}}, {{}, {}}}, {{}, 
    {GrayLevel[0], PointSize[0.012833333333333334`], AbsoluteThickness[1.6], 
     GeometricTransformationBox[InsetBox[
       FormBox[
        StyleBox[
         GraphicsBox[
          {EdgeForm[None], DiskBox[{0, 0}]}],
         StripOnInput->False,
         GraphicsBoxOptions->{DefaultBaseStyle->Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           GrayLevel[0]]}],
        TraditionalForm], {0., 0.}, Automatic, Offset[
       7]], {{{-7.477072485039486, -7.654038628245914}}, {{-7.58462165909856, \
-7.331851311549527}}, {{-7.6234205389517715`, -7.2447619028032735`}}, \
{{-7.631750670813309, -7.227434760396304}}, {{-7.671745167499515, \
-7.155395626448711}}, {{-7.732721658860154, -7.0721161381416}}, \
{{-7.776725265211912, -7.0241965320507}}, {{-7.9775992082100045`, \
-6.878747845194046}}, {{-8.680209055301958, -6.721942781382306}}}]}, {{}, \
{}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Log10[approximation error]\"", TraditionalForm], 
    FormBox[
    "\"Log10[|\[Gamma]\\!\\(\\*SubscriptBox[\\(|\\), \\(1\\)]\\)-1]\"", 
     TraditionalForm]},
  AxesOrigin->{-10., -10.},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{-7.3781525525282285`}, {-6.690485416108466}},
  GridLinesStyle->GrayLevel[0],
  ImageSize->400,
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-10., -5.}, {-10., -5.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.905341658397648*^9, 3.914320842425562*^9, 3.914908799596231*^9, 
   3.914908854808891*^9, 3.9170878940009384`*^9, 3.917103594654475*^9, 
   3.917103973613794*^9, 3.917104817057019*^9, 3.9388453632890425`*^9, {
   3.9388454193220396`*^9, 3.9388454360597024`*^9}, 3.939285517489368*^9, 
   3.939285560690208*^9, {3.939285813507254*^9, 3.9392858405567017`*^9}, 
   3.93928588123834*^9, 3.939286719186062*^9, 3.939286825419206*^9, 
   3.939287028540825*^9, 3.939287277680998*^9, 3.939287623507049*^9, 
   3.93928768789797*^9, 3.939287733360319*^9, {3.939287904320518*^9, 
   3.93928792794133*^9}, 3.939287984623594*^9, {3.93928803590665*^9, 
   3.9392880788225*^9}, {3.93928812749608*^9, 3.939288149845495*^9}, {
   3.939288383827047*^9, 3.9392884725871162`*^9}, 3.939288517014587*^9, {
   3.939288550879108*^9, 3.939288595087272*^9}, {3.9392886390415287`*^9, 
   3.939288687094324*^9}, {3.939291160506422*^9, 3.939291162097512*^9}, 
   3.939291499894317*^9, 3.9392932947340717`*^9, {3.9392934242314663`*^9, 
   3.939293491480022*^9}, 3.939293539427698*^9, {3.939293619150947*^9, 
   3.939293662334509*^9}, {3.939293716710318*^9, 3.9392937715750713`*^9}, {
   3.939293830572162*^9, 3.939293879011509*^9}, {3.939293916793148*^9, 
   3.939293947035033*^9}, {3.939294064739443*^9, 3.939294083744171*^9}, 
   3.9392949617475414`*^9, 3.939295000967827*^9, {3.9392950704851227`*^9, 
   3.9392950981762085`*^9}, 3.9392952326407833`*^9, 3.9392953131517067`*^9, 
   3.9392953646548424`*^9, 3.9393606498387012`*^9, 3.939360736922543*^9},
 CellLabel->"Out[37]=",ExpressionUUID->"b38e35c8-2f04-491b-920b-8641fa05fad3"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1156.754716981132, 700.9811320754717},
WindowMargins->{{0.6792452830188679, Automatic}, {
  Automatic, 25.13207547169811}},
Magnification:>1.3 Inherited,
FrontEndVersion->"13.0 for Linux x86 (64-bit) (December 2, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"e4ce07c5-b756-4090-81db-ba3fe052570a"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 1310, 36, 185, "Code",ExpressionUUID->"99bff3fd-7c49-9f4f-a76b-dabdcf780e4f"],
Cell[CellGroupData[{
Cell[1893, 60, 471, 7, 207, "Title",ExpressionUUID->"f97214e3-82b7-1247-bf74-45e2e601fb57"],
Cell[2367, 69, 3775, 104, 483, "Code",ExpressionUUID->"7aded57c-577d-a141-898e-2645a439078d"],
Cell[6145, 175, 2672, 58, 223, "Input",ExpressionUUID->"81f5c90b-2c20-814e-896a-6cacd300dcf7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8854, 238, 462, 7, 207, "Title",ExpressionUUID->"cc3c67c0-ffe0-784c-988c-3189a9266f2b"],
Cell[9319, 247, 1504, 42, 138, "Code",ExpressionUUID->"e7a3c6c8-71f6-7046-a10a-189c353d8cdf"],
Cell[CellGroupData[{
Cell[10848, 293, 2915, 66, 412, "Input",ExpressionUUID->"44ad50d2-a9a1-504f-aa6c-50b28ea066c2"],
Cell[13766, 361, 1342, 25, 29, "Print",ExpressionUUID->"a7f9485a-161d-4c64-a7e0-63ad08ae9571"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[15157, 392, 390, 6, 127, "Title",ExpressionUUID->"05ce3305-2cca-b349-87d2-58e57e6961df"],
Cell[15550, 400, 1919, 43, 209, "Code",ExpressionUUID->"5a07fbfa-d48d-c143-a78a-afe5a496ae9b"],
Cell[CellGroupData[{
Cell[17494, 447, 4427, 100, 486, "Input",ExpressionUUID->"87269722-91db-134a-8647-44709a48922a"],
Cell[21924, 549, 3821, 120, 645, "Print",ExpressionUUID->"24526ce8-96be-4300-8a22-a9354ae657e6"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[25794, 675, 433, 7, 127, "Title",ExpressionUUID->"756501bf-c5c2-9040-9f75-e89ad71e9b65"],
Cell[CellGroupData[{
Cell[26252, 686, 4956, 114, 697, "Input",ExpressionUUID->"1582efeb-7438-0641-869a-95a8646f3975"],
Cell[31211, 802, 22846, 390, 259, "Output",ExpressionUUID->"b38e35c8-2f04-491b-920b-8641fa05fad3"]
}, Open  ]]
}, Open  ]]
}
]
*)

